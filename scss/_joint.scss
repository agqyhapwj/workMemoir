// 頁面(瀏覽器)與物件的間距--上下為0；內間距--上下左右為0；設定在「*」它是(總管)
* {
    //  margin:外間距--上下為0；左右自動；若物件寬度小於100%時，物件將會自動垂直置中
    // padding:內間距--上下左右為0
    margin: 0 auto;
    padding: 0;
}
body,html {
    width: 100%;
    max-width: 100vw;
    height: 100%;
}
img {
    width: 100%;
    height: auto;
}
// 變數區   vw在父框架與子框架之間，會呈現誤差值，建議單位用 %
$W10: 10vw;
$W1p: 10%;
// 文字：px(固定值)，em(百分比~的疊加父框架的設定值)，rem(百分比，不會疊加父框架的設定值)
$Trem: 1rem;

// 繼承區 (相同樣式) : 將scss的繼承功能，寫在共用檔內，因為位置編排有誤，故造成編譯時出錯
/* You may ont @extecn an outer selector from within @media.
   You may only @extend selectors within the same directiv.
   無法由 @media (媒體判斷)去呼叫「外部連結檔」*/

// 撰寫 scss 的「混合函式 @mixin」，修正scss的繼承功能，無法被 @media 使用的問題

// 隱藏區塊
@mixin DN {
    display: none;
}

// 開啟隱藏區塊
@mixin OpenBlock {
    display: block;
}
// 清除浮動
@mixin ClearFloat {
    clear: both;
}
// 隱藏項目符號
@mixin DNli{
    list-style-type: none;
}

// 計算header裡 Logo與MenuBtn 之間的的寬度
// 1:設變數(承載值的物件名稱) $WM=倍數 $WA=加的總數
// 2.MenuBtn寬度 = 父框架的總寬度(100) - Logo寬度(85)
@mixin LogoMenuBtn($WM, $WA) {
    $LogoW: $W10 * $WM + $WA;
    $MBW: $W10 * 10 - $LogoW;

    // 連動計算寬度Logo與MenuBtn
    #Logo {
        // 寬度
        width: $LogoW;
    }
    
    #MenuBtnWidth {
        // 寬度
        width: $MBW;
    }
}

// 手機版按鈕選單圖片專用
@mixin MenuBtn($PosiTion, $Size, $DirPath, $Image) {
    // 變數設定: 1.對齊 2.尺寸 3.目錄位置 4.圖片
    // 問題:路徑無法直接讀取變數名稱
    // 解決:scss提供的語法，插入值寫法(基於javascript的es6語法)，自訂#{自訂名稱(英文和數字)}
    // 例:#{Image}寫在路徑上
    background-repeat: no-repeat;
    background-position: $PosiTion;
    background-size: $Size;
    background-image: url(../../images/#{$DirPath}/#{$Image});
}